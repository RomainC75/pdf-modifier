version: '3'
services:
  redis:
    image: redis
    ports:
      - "6379:6379"
    
  server:
    build: ./server
    environment:
      - REDIS_URL=redis://redis:6379
      - PORT=5000
      - BACKENDADDRESS=${BACKENDADDRESS}
    ports:
      - "5000:5000"
    volumes:
      - $PWD/server/build:/server/build
    command: npm run dev
    env_file:
      - .env

  pdf_handler:
    build: ./pdf_handler
    environment:
      - REDIS_URL=redis://redis:6379
      
      - DATA_FOLDER=./app/data
      - STAMP_FOLDER=./app/data/stamps/

      - TEMP_FOLDER=./private_data/temp/
      - DOCS_FOLDER=./private_data/docs/
      - OUTPUT_FOLDER=./private_data/output/
      - RESULT_FILE=./private_data/pdf_result.tar
      - PDF_RESULT_BASENAME=pdf_result
      - PRIVATE_FOLDER=./private_data

    command: python3 /worker/app/app.py
    volumes:
      - $PWD/pdf_handler/app:/worker/app
      # - type: volume
      #   source: mydata-{{.Task.Slot}}
      #   target: /worker/app/data/docs
      #   volume:
      #     nocopy: true
    env_file:
      - .env
    deploy:
      replicas: 2
    restart: always

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - server

# docker compose --env-file .env.prod config

volumes:
  mydata-1:
  mydata-2:
  mydata-3: